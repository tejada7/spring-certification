/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ftm.vcp.bootexamples.infrastructure.driving.rest.api;

import com.ftm.vcp.bootexamples.infrastructure.driving.rest.api.model.AddItemRequest;
import com.ftm.vcp.bootexamples.infrastructure.driving.rest.api.model.CartResponse;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.service.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;


@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public interface CartApi {

    /**
     * PUT /carts/{cartId}/items : Add/update items in the cart.
     *
     * @param cartId Cart ID (required)
     * @param addItemRequest  (required)
     * @return Item added (status code 200)
     *         or Business rules have not been respected (status code 400)
     *         or Cart or product not found (status code 404)
     */
    @HttpExchange(
        method = "PUT",
        value = "/carts/{cartId}/items",
        accept = "application/json",
        contentType = "application/json"
    )
    ResponseEntity<Void> addItemToCart(
        @Parameter(name = "cartId", description = "Cart ID", required = true, in = ParameterIn.PATH) @PathVariable("cartId") Long cartId,
        @Parameter(name = "AddItemRequest", description = "", required = true) @Valid @RequestBody AddItemRequest addItemRequest
    );


    /**
     * POST /carts : Create a cart.
     *
     * @return Cart initialized (status code 200)
     */
    @HttpExchange(
        method = "POST",
        value = "/carts",
        accept = "application/json"
    )
    ResponseEntity<Void> createCart(
        
    );


    /**
     * GET /carts/{cartId} : Retrieve a cart
     *
     * @param cartId Cart ID (required)
     * @return Cart retrieved (status code 200)
     *         or Cart not found (status code 404)
     */
    @HttpExchange(
        method = "GET",
        value = "/carts/{cartId}",
        accept = "application/json"
    )
    ResponseEntity<CartResponse> getCart(
        @Parameter(name = "cartId", description = "Cart ID", required = true, in = ParameterIn.PATH) @PathVariable("cartId") Long cartId
    );

}
